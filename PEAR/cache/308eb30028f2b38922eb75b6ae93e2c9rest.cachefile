a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:22:"/rest/p/system_command";}s:8:"_content";s:14:"System_Command";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:5:"1.0.7";s:2:"st";s:6:"stable";s:1:"l";s:11:"PHP License";s:1:"m";s:8:"doconnor";s:1:"s";s:58:"PEAR::System_Command is a commandline execution interface.";s:1:"d";s:642:"System_Command is a commandline execution interface. Running functions from the commandline can be risky if the proper precautions are not taken to escape the shell arguments and reaping the exit status properly. This class provides a formal interface to both, so that you can run a system command as comfortably as you would run a php function, with full pear error handling as results on failure. It is important to note that this class, unlike other implementations, distinguishes between output to stderr and output to stdout. It also reports the exit status of the command. So in every sense of the word, it gives php shell capabilities.";s:2:"da";s:19:"2010-10-25 13:49:35";s:1:"n";s:140:"Automatically built QA release
Bug #10781 tmpDir not being set correctly by construtor - cconstantine

Bug #14836 Wrong category ? - cweiske";s:1:"f";s:4:"6105";s:1:"g";s:44:"http://pear.php.net/get/System_Command-1.0.7";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:17:"package.1.0.7.xml";}}}